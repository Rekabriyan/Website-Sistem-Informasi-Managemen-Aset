// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  username        String     @unique
  password        String
  role            String
  divisi          String
  jabatan         String
  permintaan      permintaan[] // Relasi dengan permintaan
  laporan         laporan[]    // Relasi dengan laporan
}

model Asset {
  id                        Int        @id @default(autoincrement())
  kode_asset                String     
  nama_asset                String
  aspek_legal               String
  jenis_asset               String
  jumlah_asset              Int
  spesifikasi               String
  harga                     Int
  kondisi_asset             String
  status_ketersediaan       String
  lokasi                    String
  tanggal_pembelian         DateTime
  asal_usul_pembelian       String
  keterangan                String
  kode_register             Int
  merk                      String
  pengguna_asset            String
  permintaan                permintaan[] // Relasi dengan permintaan
}

model permintaan {
  id                        Int        @id @default(autoincrement())
  id_user                   Int?
  id_asset                  Int?
  tipe_permintaan           String
  status                    String
  tanggal_permintaan        DateTime
  keterangan                String
  nama_pengguna             String
  lokasi_pengguna           String
  nama_calon_pengguna       String
  calon_lokasi_pengguna     String  
  ekspedisi                 String?
  estimasi                  Int?
  lokasi_mutasi             String?
  approved_by               String?
  user                      User?       @relation(fields: [id_user], references: [id])  // FK ke User
  asset                     Asset?      @relation(fields: [id_asset], references: [id], onDelete: Cascade) // FK ke Asset

  @@index([id_user])
  @@index([id_asset])
}

model laporan {
  id                        Int        @id @default(autoincrement())
  jenis_laporan             String
  kategori_asset            String
  tanggal_laporan           DateTime
  id_user                   Int
  file_laporan              Int
  user                      User       @relation(fields: [id_user], references: [id])  // FK ke User

  @@index([id_user])
}

model mutasi {
  id                        Int        @id @default(autoincrement())
  kode_aset                 String
  nama_aset                 String
  kode_register             Int
  jenis_asset               String
  jumlah_awal               Int
  harga_awal                Int
  perubahan_jumlah          Int
  perubahan_harga           Int
  jumlah_akhir              Int
  harga_akhir               Int
  keterangan                String?
}

model peminjaman {
  id                        Int        @id @default(autoincrement())
  jenis_asset               String
  nama_aset                 String
  spesifikasi               String
  aspek_legal               String
  tanggal_pembelian         DateTime            
  kode_register             Int
  kondisi_asset             String
  nama_peminjam             String
  tanggal_peminjaman        DateTime
  nama_pengembali           String?
  tanggal_pengembalian      DateTime?
  keterangan                String?
}